<UserControl x:Class="RESTLess.AppView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
             xmlns:cal="http://www.caliburnproject.org"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500">

    <DockPanel Background="DarkGray">

        <StatusBar MaxHeight="25" DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock x:Name="StatusBarTextBlock">Test</TextBlock>
            </StatusBarItem>
        </StatusBar>

        <Grid DockPanel.Dock="Top">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <StackPanel DockPanel.Dock="Left" MinHeight="300" Background="White" Grid.Column="0" Grid.Row="0" VerticalAlignment="Stretch">

        </StackPanel>

        <GridSplitter Grid.Column="0" Width="2" HorizontalAlignment="Right" VerticalAlignment="Stretch" ResizeBehavior="CurrentAndNext"/>
        
        <DockPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Stretch">

                <Grid DockPanel.Dock="Top">
                    <Grid.Resources>
                        <!-- Brushes for colours/backgrounds -->
                        <SolidColorBrush x:Key="FontBrush" Color="#FFFFFF"/>

                        <LinearGradientBrush x:Key="BgRedBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#DD6666"/>
                            <GradientStop Offset="1" Color="#DD0000"/>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="BgBlueBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#6666DD"/>
                            <GradientStop Offset="1" Color="#0000DD"/>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="BgYellowBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#BBBB00"/>
                            <GradientStop Offset="1" Color="#DDDD00"/>
                        </LinearGradientBrush>

                        <LinearGradientBrush x:Key="BgGreenBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#66DD66"/>
                            <GradientStop Offset="1" Color="#00DD00"/>
                        </LinearGradientBrush>

                        <SolidColorBrush x:Key="RedBrush" Color="#ff0000"/>
                        <SolidColorBrush x:Key="BlueBrush" Color="#0000ff"/>
                        <SolidColorBrush x:Key="GreenBrush" Color="#00ff00"/>
                        <SolidColorBrush x:Key="YellowBrush" Color="#ffff00"/>

                        <LinearGradientBrush x:Key="CheckedBrush" StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Offset="0" Color="#CCCCCC"/>
                            <GradientStop Offset="1" Color="#999999"/>
                        </LinearGradientBrush>

                        <!-- Left Button Template -->
                        <ControlTemplate x:Key="ToggleButtonLeft" TargetType="{x:Type ToggleButton}">
                            <Border
                            Name="Border"
                            Background="{StaticResource CheckedBrush}"
                            BorderBrush="{StaticResource BlueBrush}"
                            BorderThickness="1,1,0,1"
                            CornerRadius="5,0,0,5">
                                <ContentPresenter
                                HorizontalAlignment="Center"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Content}"
                                TextBlock.FontWeight="Bold"
                                TextBlock.Foreground="{StaticResource FontBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BgBlueBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                        <!-- Middle Button(s) Template -->
                        <ControlTemplate x:Key="ToggleButtonMidLeft" TargetType="{x:Type ToggleButton}">
                            <Border
                            Name="Border"
                            Background="{StaticResource CheckedBrush}"
                            BorderBrush="{StaticResource GreenBrush}"
                            BorderThickness="0,1,0,1"
                            CornerRadius="0">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.FontWeight="Bold"
                                    TextBlock.Foreground="{StaticResource FontBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BgGreenBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                        <ControlTemplate x:Key="ToggleButtonMidRight" TargetType="{x:Type ToggleButton}">
                            <Border
                            Name="Border"
                            Background="{StaticResource CheckedBrush}"
                            BorderBrush="{StaticResource YellowBrush}"
                            BorderThickness="0,1,0,1"
                            CornerRadius="0">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.FontWeight="Bold"
                                    TextBlock.Foreground="{StaticResource FontBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BgYellowBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>

                        <!-- Right Button Template -->
                        <ControlTemplate x:Key="ToggleButtonRight" TargetType="{x:Type ToggleButton}">
                            <Border
                            Name="Border"
                            Background="{StaticResource CheckedBrush}"
                            BorderBrush="{StaticResource RedBrush}"
                            BorderThickness="0,1,1,1"
                            CornerRadius="0, 5, 5, 0">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.FontWeight="Bold"
                                    TextBlock.Foreground="{StaticResource FontBrush}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="#808080"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource BgRedBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>

                    <RadioButton Name="GetChecked" GroupName="RequestMethod" Grid.Row="0" Grid.Column="0" Padding="2" Template="{DynamicResource ToggleButtonLeft}">GET</RadioButton>
                    <RadioButton Name="PostChecked" GroupName="RequestMethod" Grid.Row="0" Grid.Column="1" Padding="2" Template="{DynamicResource ToggleButtonMidLeft}">POST</RadioButton>
                    <RadioButton Name="PutChecked" GroupName="RequestMethod" Grid.Row="0" Grid.Column="2" Padding="2" Template="{DynamicResource ToggleButtonMidRight}">PUT</RadioButton>
                    <RadioButton Name="DeleteChecked" GroupName="RequestMethod" Grid.Row="0" Grid.Column="3" Padding="2" Template="{DynamicResource ToggleButtonRight}">DELETE</RadioButton>

                    <TextBox Name="UrlTextBox" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Stretch">
                        <TextBox.Style>
                            <Style TargetType="TextBox" xmlns:sys="clr-namespace:System;assembly=mscorlib">
                                <Style.Resources>
                                    <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Center" Stretch="None">
                                        <VisualBrush.Visual>
                                            <Label Content="URL" Foreground="Gray" Opacity="75"/>
                                        </VisualBrush.Visual>
                                    </VisualBrush>
                                </Style.Resources>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="Text" Value="{x:Null}">
                                        <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="Background" Value="White" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <DataGrid x:Name="HeadersDataGrid" AutoGenerateColumns="False" RowHeaderWidth="0" HorizontalAlignment="Stretch"
                        CanUserAddRows="True" MinColumnWidth="150" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" HorizontalScrollBarVisibility="Hidden">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=Name}" Header="Header" Width="*">
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Path=Value}" Header="Value" Width="*">
                            </DataGridTextColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                    <TextBox Name="BodyTextBox" TextWrapping="Wrap" AcceptsReturn="True" Height="Auto" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="3"></TextBox>
                    
                    <Button Name="SendButton" Margin="2" Content="Send" Grid.Column="3" Grid.Row="4">
                    </Button>
                </Grid>

                <Grid MinHeight="200" VerticalAlignment="Stretch" DockPanel.Dock="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBlock Name="RawResultsTextBlock" Background="LightGray" Grid.Column="0" Grid.Row="0" VerticalAlignment="Stretch"></TextBlock>
                </Grid>

            </DockPanel>
        
        </Grid>

    </DockPanel>

</UserControl>
